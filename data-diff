#!/usr/bin/python3
import os
import statistics
import sys
import time

import clickhouse_driver

__version__ = '0.2.1'

def resolve(absolute, tolerance):
    keys, values = list(absolute.keys()), list(absolute.values())
    zeroes = values.count(0)
    mean = statistics.mean(values)

    if zeroes == len(absolute):
        return [0, '0 *']
    elif zeroes > 0:
        return [1, '0 ' + ','.join([shortname \
            for shortname, returned in absolute.items() if returned == 0])]
    else:
        summary = []
        for shortname, returned in absolute.items():
            if returned < mean * (1 - tolerance / 100.0): # ...and individual dev.
                summary += [shortname + '<M']
            elif returned > mean * (1 + tolerance / 100.0):
                summary += [shortname + '>M']
        if len(summary) == 0:
            return [0, '='.join(keys)]
        else:
            return [1, ','.join(summary)]

def diff(dbtable, timestamp, traffic, now, interval, clusters, tolerance):
    absolute = {}
    for shortname, cluster in clusters.items():
        try:
            cluster.execute('''DESCRIBE %s''' % dbtable)
        except clickhouse_driver.errors.ServerException as e:
                if e.code in [
                    clickhouse_driver.errors.ErrorCodes.UNKNOWN_DATABASE,
                    clickhouse_driver.errors.ErrorCodes.UNKNOWN_TABLE]:
                    returned = 0
                else:
                    raise e
        else:
            for (returned,) in cluster.execute('''
                WITH toStartOfHour(fromUnixTimestamp(%d)) AS start
                SELECT sum(%s) FROM %s WHERE %s
                ''' % \
                (now, traffic, dbtable, interval.format(t=timestamp))):
                break
        absolute[shortname] = returned
    return resolve(absolute, tolerance), absolute

def __main__():
    if len(sys.argv) not in [6, 7]:
        print('''usage: data-diff CLUSTERS INTERVAL TABLE TIMESTAMP TRAFFIC [TOLERANCE]

- CLUSTERS file line format: SHORT-NAME BOOTSTRAP-HOSTNAME (will add port 9000)
- INTERVAL is SQL syntax with `{t}' to be replaced with timestamp column name
- TABLE can use percent-style wildcard syntax and specify database as well
- TIMESTAMP and TRAFFIC are column names for filtering and aggregation, resp.
- TOLERANCE specifies max allowed percentage deviation from mean of all clusters
- output format: GOOD|BAD<TAB>SUMMARY<TAB>VALUES
''')
        sys.exit(2)
    clusters = {}
    tolerance = float(sys.argv[6]) if len(sys.argv) == 7 else 0.5
    now = time.time()
    with open(sys.argv[1]) as f:
        for line in f:
            split = line.strip().split(' ')
            if len(split) != 2:
                raise Exception('bad line: ' + line)
            clusters[split[0]] = clickhouse_driver.Client(
                host=split[1], port=9000, user='default', password='')

    interval, dbtable, timestamp, traffic = sys.argv[2:6]
    (stat, summary), absolute = \
        diff(dbtable, timestamp, traffic, now, interval, clusters, tolerance)
    print('%s\t%s\t%s' % ('GOOD' if stat == 0 else 'BAD', summary, absolute))

__main__()
